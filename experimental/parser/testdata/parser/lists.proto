// Copyright 2020-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This test exercises every delimited list production in the language.

option foo = [];
option foo = [1];
option foo = [1, 2];
option foo = [1, 2 3];
option foo = [1, 2,, 3];
option foo = [1, 2,, 3,];
option foo = [,1 2,, 3,];
option foo = [1; 2; 3];
option foo = [a {}];
option foo = [,];

option foo = {
    bar: 1
    bar {
        bar: 2;;
    }
};
option foo = {;bar: 1};
option foo = {baz: 1;; baz: 1};
option foo = {baz: 1,; baz: 1;};
option foo = {
    bar {;}
    bar {,}
};

service S {
    rpc Foo(int) returns (int);
    rpc Foo(int, int) returns (int, int);
    rpc Foo(int int) returns (int int);
    rpc Foo(int; int) returns (int, int,);
    rpc Foo(, int, int) returns (int,, int,);
    rpc Foo(;) returns (,);
    rpc Foo() returns ();
}

message M {
    map<int> x;
    map<int, int> x;
    map<int int> x;
    map<int,, int> x;
    map<,> x;
    map<> x;
    map<,int, int> x;
    map<int; int> x;
    map<
        int,
        int,
    > x;

    reserved;
    reserved 1;
    reserved 1, 2 3;
    reserved 1, 2,, 3;
    reserved 1, 2,, 3,;
    reserved ,1 2,, 3,;
    reserved a {};
    reserved ,;
}