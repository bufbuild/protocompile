decls:
- syntax: { kind: KIND_SYNTAX, value.literal.string_value: "proto2" }
- package.path.components: [{ ident: "test" }]
- def:
    kind: KIND_SERVICE
    name.components: [{ ident: "Foo" }]
    body.decls:
    - def:
        kind: KIND_METHOD
        name.components: [{ ident: "Bar1" }]
        signature:
          inputs:
          - prefixed:
              prefix: PREFIX_OPTIONAL
              type.path.components:
              - ident: "foo"
              - { ident: "Bar", separator: SEPARATOR_DOT }
          outputs:
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
    - def:
        kind: KIND_METHOD
        name.components: [{ ident: "Bar2" }]
        signature:
          inputs:
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
          outputs:
          - prefixed:
              prefix: PREFIX_REPEATED
              type.path.components:
              - ident: "foo"
              - { ident: "Bar", separator: SEPARATOR_DOT }
    - def:
        kind: KIND_METHOD
        name.components: [{ ident: "Bar2" }]
        signature:
          inputs:
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
          outputs:
          - prefixed:
              prefix: PREFIX_REPEATED
              type.path.components:
              - ident: "foo"
              - { ident: "Bar", separator: SEPARATOR_DOT }
    - def:
        kind: KIND_METHOD
        name.components: [{ ident: "Bar3" }]
        signature:
          inputs:
          - generic:
              path.components: [{ ident: "map" }]
              args:
              - path.components: [{ ident: "string" }]
              - path.components:
                - ident: "foo"
                - { ident: "Bar", separator: SEPARATOR_DOT }
          outputs:
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
    - def:
        kind: KIND_METHOD
        name.components: [{ ident: "Bar4" }]
        signature:
          inputs:
          - path.components: [{ ident: "string" }]
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
          outputs:
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
    - def:
        kind: KIND_METHOD
        name.components: [{ ident: "Bar5" }]
        signature:
          inputs:
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
          outputs:
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
          - prefixed:
              prefix: PREFIX_STREAM
              type.path.components: [{ ident: "string" }]
    - def:
        kind: KIND_METHOD
        name.components: [{ ident: "Bar6" }]
        signature:
          inputs:
          - prefixed:
              prefix: PREFIX_STREAM
              type.prefixed:
                prefix: PREFIX_REPEATED
                type.path.components:
                - ident: "foo"
                - { ident: "Bar", separator: SEPARATOR_DOT }
          outputs:
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
    - def:
        kind: KIND_METHOD
        name.components: [{ ident: "Bar7" }]
        signature:
          inputs:
          - prefixed:
              prefix: PREFIX_STREAM
              type.generic:
                path.components: [{ ident: "map" }]
                args:
                - path.components: [{ ident: "string" }]
                - path.components:
                  - ident: "foo"
                  - { ident: "Bar", separator: SEPARATOR_DOT }
          outputs:
          - path.components:
            - ident: "foo"
            - { ident: "Bar", separator: SEPARATOR_DOT }
    - def:
        kind: KIND_METHOD
        name.components: [{ ident: "Bar8" }]
        signature:
          inputs:
          - path.components:
            - ident: "foo"
            - extension.components:
              - ident: "bar"
              - { ident: "baz", separator: SEPARATOR_DOT }
              separator: SEPARATOR_DOT
          outputs:
          - path.components:
            - ident: "buf"
            - { ident: "build", separator: SEPARATOR_DOT }
            - { ident: "x", separator: SEPARATOR_SLASH }
            - { ident: "y", separator: SEPARATOR_DOT }
