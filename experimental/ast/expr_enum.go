// Copyright 2020-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by github.com/bufbuild/protocompile/internal/enum. DO NOT EDIT.

package ast

import (
	"fmt"
)

// String implements [fmt.Stringer].
func (v ExprKind) String() string {
	if int(v) < 0 || int(v) > len(_ExprKindStrings) {
		return fmt.Sprintf("ExprKind(%v)", int(v))
	}
	return _ExprKindStrings[int(v)]
}

var _ExprKindStrings = [...]string {
	ExprKindNil: "ExprKindNil",
	ExprKindLiteral: "ExprKindLiteral",
	ExprKindPrefixed: "ExprKindPrefixed",
	ExprKindPath: "ExprKindPath",
	ExprKindRange: "ExprKindRange",
	ExprKindArray: "ExprKindArray",
	ExprKindDict: "ExprKindDict",
	ExprKindField: "ExprKindField",
}

// GoString implements [fmt.GoStringer].
func (v ExprKind) GoString() string {
	if int(v) < 0 || int(v) > len(_ExprKindStrings) {
		return fmt.Sprintf("ast.ExprKind(%v)", int(v))
	}
	return _ExprKindStrings[int(v)]
}

var _ExprKindGoStrings = [...]string {
	ExprKindNil: "ast.ExprKindNil",
	ExprKindLiteral: "ast.ExprKindLiteral",
	ExprKindPrefixed: "ast.ExprKindPrefixed",
	ExprKindPath: "ast.ExprKindPath",
	ExprKindRange: "ast.ExprKindRange",
	ExprKindArray: "ast.ExprKindArray",
	ExprKindDict: "ast.ExprKindDict",
	ExprKindField: "ast.ExprKindField",
}

