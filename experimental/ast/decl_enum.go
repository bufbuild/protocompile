// Copyright 2020-2024 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by github.com/bufbuild/protocompile/internal/enum. DO NOT EDIT.

package ast

import (
	"fmt"
)

// String implements [fmt.Stringer].
func (v DeclKind) String() string {
	if int(v) < 0 || int(v) > len(_DeclKindStrings) {
		return fmt.Sprintf("DeclKind(%v)", int(v))
	}
	return _DeclKindStrings[int(v)]
}

var _DeclKindStrings = [...]string {
	DeclKindNil: "DeclKindNil",
	DeclKindEmpty: "DeclKindEmpty",
	DeclKindSyntax: "DeclKindSyntax",
	DeclKindPackage: "DeclKindPackage",
	DeclKindImport: "DeclKindImport",
	DeclKindDef: "DeclKindDef",
	DeclKindBody: "DeclKindBody",
	DeclKindRange: "DeclKindRange",
}

// GoString implements [fmt.GoStringer].
func (v DeclKind) GoString() string {
	if int(v) < 0 || int(v) > len(_DeclKindStrings) {
		return fmt.Sprintf("ast.DeclKind(%v)", int(v))
	}
	return _DeclKindStrings[int(v)]
}

var _DeclKindGoStrings = [...]string {
	DeclKindNil: "ast.DeclKindNil",
	DeclKindEmpty: "ast.DeclKindEmpty",
	DeclKindSyntax: "ast.DeclKindSyntax",
	DeclKindPackage: "ast.DeclKindPackage",
	DeclKindImport: "ast.DeclKindImport",
	DeclKindDef: "ast.DeclKindDef",
	DeclKindBody: "ast.DeclKindBody",
	DeclKindRange: "ast.DeclKindRange",
}

