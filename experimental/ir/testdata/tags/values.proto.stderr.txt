error: enum values must be unique
  --> testdata/tags/values.proto:23:10
   |
22 |     Y = 2;
   |         - first used here
23 |     Y2 = 2;
   |          ^ used again here

error: literal out of range for `int32`
  --> testdata/tags/values.proto:28:10
   |
28 |     Z4 = 0x80000000;
   |          ^^^^^^^^^^
   = note: the range for `int32` is `-0x80000000 to 0x7fffffff`

error: literal out of range for `int32`
  --> testdata/tags/values.proto:29:10
   |
29 |     Z5 = -0x80000001;
   |          ^^^^^^^^^^^
   = note: the range for `int32` is `-0x80000000 to 0x7fffffff`

error: literal out of range for `int32`
  --> testdata/tags/values.proto:30:10
   |
30 |     Z6 = 0xffffffffffffffffffffffffffffffff;
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: the range for `int32` is `-0x80000000 to 0x7fffffff`

error: mismatched types
  --> testdata/tags/values.proto:32:10
   |
32 |     F1 = 1.0;
   |          ^^^ expected `int32`, found floating-point literal
   = note: expected: scalar type `int32`
              found: floating-point literal

error: mismatched types
  --> testdata/tags/values.proto:33:10
   |
33 |     F2 = -1.0;
   |          ^^^^ expected `int32`, found floating-point literal
   = note: expected: scalar type `int32`
              found: floating-point literal

error: mismatched types
  --> testdata/tags/values.proto:34:10
   |
34 |     F3 = inf;
   |          ^^^ expected `int32`, found floating-point literal
   = note: expected: scalar type `int32`
              found: floating-point literal

error: mismatched types
  --> testdata/tags/values.proto:35:10
   |
35 |     F4 = -inf;
   |          ^^^^ expected `int32`, found floating-point literal
   = note: expected: scalar type `int32`
              found: floating-point literal

error: mismatched types
  --> testdata/tags/values.proto:36:10
   |
36 |     F5 = nan;
   |          ^^^ expected `int32`, found floating-point literal
   = note: expected: scalar type `int32`
              found: floating-point literal

error: mismatched types
  --> testdata/tags/values.proto:38:10
   |
38 |     B1 = false;
   |          ^^^^^ expected `int32`, found `bool`
   = note: expected: scalar type `int32`
              found: scalar type `bool`

error: mismatched types
  --> testdata/tags/values.proto:39:10
   |
39 |     B2 = true;
   |          ^^^^ expected `int32`, found `bool`
   = note: expected: scalar type `int32`
              found: scalar type `bool`

error: `max` outside of range expression
  --> testdata/tags/values.proto:40:10
   |
40 |     B3 = max;
   |          ^^^
   = note: the special `max` expression is only allowed in a range expression

encountered 12 errors
