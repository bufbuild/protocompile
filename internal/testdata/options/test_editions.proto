edition = "2023";

import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";

message Foo {
  string name = 1;
  Foo foo = 2 [
    (any) = {
      [type.googleapis.com/Foo]: {
        Foo: {
          name: "abc",
          Foo: { name: "xyz" }
        }
      }
    },
    features.message_encoding = DELIMITED
  ];
  Foo other = 3;
  Val val = 4;
  repeated Foo children = 5 [features.message_encoding = DELIMITED];
}

enum Val {
  option features.enum_type = CLOSED;
  VAL0 = 0;
  VAL1 = 1;
}

extend google.protobuf.FileOptions {
  Foo delimited = 10101 [features.message_encoding = DELIMITED];
  Foo other = 10102;
  repeated Foo delimiteds = 10103 [features.message_encoding = DELIMITED];
  repeated Foo others = 10104;
}

extend google.protobuf.FieldOptions {
  google.protobuf.Any any = 10101;
}

option (delimited).name = "123";
option (delimited).foo.name = "abc";
option (delimited).foo.val = VAL1;
option (delimited).foo.children = {
  name: "abc-1"
};
option (delimited).foo.children = {
  name: "abc-2"
};
option (delimited).other.name = "xyz";
option (delimited).other.val = VAL0;

option (other) = {
  name: "123"
  val: VAL0
  Foo <name:"456">
  // NOTE: We can't currently refer to children in here
  // because referring to delimited-encoded fields whose
  // name != lower-case(type-name) inside a message
  // literal is currently broken in protoc :(
  // https://github.com/protocolbuffers/protobuf/issues/16239
};

option (delimiteds) = {
  name: "ABC"
  val: 1
};
option (delimiteds) = {
  name: "XYZ"
  val: 1
};

option (others) = {
  name: "123"
  val: 0
};
option (delimiteds) = {
  name: "1234"
  val: 0
};
